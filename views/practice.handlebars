<h5>Graph building practice</h5>

<svg width="800" height="800">
	<g transform="translate(50, 50)">
		<g class="links"></g>
		<g class="nodes"></g>
	</g>
</svg>

<script src="https://d3js.org/d3.v4.min.js"></script>
<script>
	//var canvas = d3.select("graphs").append("svg")
	//	.attr("width", 500)
	//	.attr("height", 500)
	//	.append("g")	//append group element
	//	.attr("transform", "translate(50,50)");


	var tree = d3.tree()
		.size([500, 500]);

	//d3.json("/data/mydata.json").then(function(data) {
	d3.json("/data/mydata.json", function (data) {
		var root = d3.hierarchy(data);
		var nodes = tree(root);
		var links = tree(nodes);

		d3.select("svg g.nodes")
			.selectAll("circle.node")
			.data(root.descendants())
			.enter()
			.append("circle")
			.classed("node", true)
			.attr("cx", function (d) { return d.x; })
			.attr("cy", function (d) { return d.y; })
			.attr("r", 10)
			.attr("fill", "green")

		d3.select('svg g.links')
			.selectAll('line.link')
			.data(root.links())
			.enter()
			.append('line')
			.classed('link', true)
			.attr('x1', function (d) { return d.source.x; })
			.attr('y1', function (d) { return d.source.y; })
			.attr('x2', function (d) { return d.target.x; })
			.attr('y2', function (d) { return d.target.y; })
			.attr("stroke", "black")
			.attr("stroke-width", 2);
	});


</script>